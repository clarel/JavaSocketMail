/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

package br.com.redes;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;

public class ClienteEmail extends javax.swing.JFrame {

	private static DataOutputStream dos;

	/** Creates new form Find */
	public ClienteEmail() {
		this.setTitle("Cliente envio e-mail por Socket SSL - Clarel Spies, Luiza Rabuski");

		initComponents();
		this.setLocationRelativeTo(null);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		remetente = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		senha = new javax.swing.JPasswordField();
		jLabel3 = new javax.swing.JLabel();
		porta = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		servidor = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		destinatario = new javax.swing.JTextField();
		assunto = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		mensagem = new javax.swing.JTextArea();
		jScrollPane2 = new javax.swing.JScrollPane();
		log = new javax.swing.JTextArea();
		jLabel8 = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setText("remetente");
		jLabel2.setText("senha");
		jLabel3.setText("porta");
		porta.setText("465");
		jLabel4.setText("servidor");
		servidor.setText("smtp.gmail.com");
		jLabel5.setText("para");
		jLabel6.setText("assunto");
		jLabel7.setText("mensagem");

		mensagem.setColumns(20);
		mensagem.setRows(5);
		jScrollPane1.setViewportView(mensagem);

		log.setEditable(false);
		log.setColumns(20);
		log.setRows(5);
		jScrollPane2.setViewportView(log);

		jLabel8.setText("log");

		jButton1.setText("Enviar");
		jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButton1MouseClicked(evt);
			}
		});

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout
						.createSequentialGroup()
						.add(layout
								.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
								.add(layout
										.createSequentialGroup()
										.addContainerGap()
										.add(layout
												.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
												.add(jScrollPane1)
												.add(layout
														.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
														.add(layout
																.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
																.add(layout.createSequentialGroup().add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(assunto))
																.add(layout.createSequentialGroup().add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(destinatario))
																.add(layout.createSequentialGroup().add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(remetente))
																.add(layout.createSequentialGroup().add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(senha))
																.add(layout.createSequentialGroup().add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(porta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(servidor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))).add(jLabel7)))).add(layout.createSequentialGroup().add(157, 157, 157).add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(layout.createSequentialGroup().add(18, 18, 18).add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE).addContainerGap()).add(layout.createSequentialGroup().add(124, 124, 124).add(jLabel8).addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))));
		layout.setVerticalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout.createSequentialGroup().add(8, 8, 8).add(jLabel8).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jScrollPane2).addContainerGap())
				.add(layout
						.createSequentialGroup()
						.addContainerGap()
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel1).add(remetente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(jLabel2).add(senha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel3).add(porta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(jLabel4)
								.add(servidor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)).add(18, 18, 18)
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel5).add(destinatario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel6).add(assunto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jLabel7).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
						.add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(0, 12, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {

		try {
			int delay = 1000;
			String username = Base64.getEncoder().encodeToString(remetente.getText().getBytes(StandardCharsets.UTF_8));
			String password = Base64.getEncoder().encodeToString(senha.getText().getBytes(StandardCharsets.UTF_8));

			SSLSocket sock = (SSLSocket) ((SSLSocketFactory) SSLSocketFactory.getDefault()).createSocket(servidor.getText(), Integer.valueOf(porta.getText()));
			final BufferedReader br = new BufferedReader(new InputStreamReader(sock.getInputStream()));
			(new Thread(new Runnable() {
				public void run() {
					try {
						String line;
						while ((line = br.readLine()) != null) {
							log.setText(log.getText() + "\nSERVER: " + line);
						}
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
			})).start();

			dos = new DataOutputStream(sock.getOutputStream());

			try {
				envia("EHLO " + servidor.getText() + "\r\n");

				Thread.sleep(delay);
				envia("AUTH LOGIN\r\n");

				Thread.sleep(delay);
				envia(username + "\r\n");

				Thread.sleep(delay);
				envia(password + "\r\n");

				Thread.sleep(delay);
				envia("MAIL FROM:<" + remetente.getText() + ">\r\n");

				Thread.sleep(delay);
				envia("RCPT TO:<" + destinatario.getText() + ">\r\n");

				Thread.sleep(delay);
				envia("DATA\r\n");

				Thread.sleep(delay);
				envia("Subject: " + assunto.getText() + "\r\n");

				Thread.sleep(delay);
				envia(mensagem.getText() + "\r\n");

				Thread.sleep(delay);
				envia(".\r\n");

				Thread.sleep(delay);
				envia("QUIT\r\n");
			} catch (Exception ex) {
				log.setText(log.getText() + "\nERROR: " + ex.getMessage());
			}
		} catch (IOException ex) {
			log.setText(log.getText() + "\nERROR: " + ex.getMessage());
		}
	}

	private void envia(String text) throws IOException {
		dos.writeBytes(text);
		log.setText(log.getText() + "\nCliente: " + text);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels = javax.swing.UIManager.getInstalledLookAndFeels();
			for (int idx = 0; idx < installedLookAndFeels.length; idx++)
				if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
					javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
					break;
				}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClienteEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ClienteEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ClienteEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ClienteEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ClienteEmail().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JTextField assunto;
	private javax.swing.JTextField destinatario;
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTextArea log;
	private javax.swing.JTextArea mensagem;
	private javax.swing.JTextField porta;
	private javax.swing.JTextField remetente;
	private javax.swing.JPasswordField senha;
	private javax.swing.JTextField servidor;
	// End of variables declaration

}
